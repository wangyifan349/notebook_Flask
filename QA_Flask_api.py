from flask import Flask, request, jsonify
from sentence_transformers import SentenceTransformer
import numpy as np
import faiss

app = Flask(__name__)

# 内存中的 QA 数据
QA_DATA = [
    {
        "question": """硬拉的正确姿势是什么？""",
        "answer": """硬拉时保持背部平直，臀部向后，下蹲抓杠，双手与肩同宽或略宽。起杠时先用腿部和臀部发力，杠铃沿腿部贴近身体上升，顶臀站直后再缓慢放下，始终保持核心收紧，避免腰部过度前屈或后仰。"""
    },
    {
        "question": """卧推时如何避免肩部受伤？""",
        "answer": """握距略比肩宽，臂肘在下放时与身体保持约45°夹角，下放至胸部中部位置，保持手腕中立位，肩胛骨向内下方收紧并贴紧长凳。发力时脚稳踩地面，核心收紧，推起时手腕、肘部和肩关节在一条直线上，避免内旋或外旋过度。"""
    },
    {
        "question": """如何有效增长肌肉？""",
        "answer": """1. 渐进式超负荷训练：每周或每次训练逐步增加重量、次数或组数；  
2. 蛋白质摄入：每日每公斤体重摄入约1.6–2.2克优质蛋白（如乳清、鸡胸肉、鱼肉、蛋类等）；  
3. 碳水与脂肪：保证充足能量供给，碳水占总热量的45–60%，健康脂肪占20–35%；  
4. 维生素与矿物质：维生素D、B族（如烟酰胺/维生素B3）和钙、镁、锌等有助于能量代谢、肌肉收缩与恢复；  
5. 充分休息：每晚7–9小时睡眠，训练后局部肌群至少48小时恢复。"""
    },
    {
        "question": """复合训练（Compound Exercises）是什么？""",
        "answer": """复合训练指同时动用多个关节和肌群的动作，例如深蹲（膝、髋）、硬拉（髋、膝、肩）和卧推（肘、肩）。此类动作能更高效地提升全身力量、加速代谢，并增强神经肌肉协调性。"""
    },
    {
        "question": """烟酰胺（维生素B3）在健身中的作用？""",
        "answer": """烟酰胺是维生素B3的一种形式，参与NAD⁺/NADH的合成，关键于细胞能量代谢和修复。充足的烟酰胺有助于提升有氧和无氧运动的耐力及恢复，缺乏时可能造成疲劳、皮肤和神经系统问题。"""
    },
    {
        "question": """如何搭配维生素D进行健身营养补给？""",
        "answer": """维生素D促进钙吸收、维持骨骼健康，有助于肌肉功能。健身人群可每天补充800–2000 IU维生素D₃，或通过晒太阳（每天10–30分钟无防晒直晒面、手臂），并确保膳食中有富含维生素D的食物（深海鱼、蛋黄、强化奶制品）。"""
    },
    {
        "question": """如何制定一周的健身房训练计划？""",
        "answer": """- 推/拉/腿分割：周一推（胸、肩、三头）、周二拉（背、二头）、周三腿部（深蹲、硬拉变体）、周四休息、周五推、周六拉、周日休息；  
- 上/下肢分割：周一上肢、周二下肢、周三休息、周四上肢、周五下肢；  
- 全身训练：每次训练覆盖主要肌群，隔天训练，保证每周2–3次；  
根据个人目标和恢复情况调整负荷、组次和休息时长。"""
    }
]

QA_DATA += [
    {
        "question": """蛋白质在肌肉合成中的作用是什么？""",
        "answer": """蛋白质是由20种氨基酸组成的生物大分子，其中9种为必需氨基酸，必须通过膳食获得。力量训练会造成肌纤维微损伤，身体通过肌蛋白合成（MPS）来修复和增厚这些纤维，从而实现肌肉增长。膳食蛋白质被消化分解为氨基酸，进入血液后被肌细胞摄取，亮氨酸等关键氨基酸激活mTOR信号通路，启动蛋白质合成。若摄入蛋白不足，则MPS受限，肌肉恢复和生长效果不佳。"""
    },
    {
        "question": """什么是支链氨基酸（BCAA），它们为什么重要？""",
        "answer": """BCAA包括亮氨酸(leucine)、异亮氨酸(isoleucine)和缬氨酸(valine)，约占肌肉中必需氨基酸的35%。与其他氨基酸不同，BCAA主要在骨骼肌而非肝脏中代谢。  
- 亮氨酸：最强的mTOR激活剂，直接启动蛋白质合成。  
- 异亮氨酸和缬氨酸：参与能量供应、糖异生及调节血糖水平，有助于延缓疲劳。  
训练前或训练中补充BCAA可减少肌肉分解、提升耐力和延缓疲劳感。"""
    },
    {
        "question": """为什么亮氨酸对增肌尤为关键？""",
        "answer": """亮氨酸是三支链氨基酸中mTORC1（哺乳动物雷帕霉素靶蛋白复合体1）最有效的激活剂。当细胞内亮氨酸浓度达到阈值时，mTORC1被激活，促进核糖体生物合成和翻译起始因子活化，显著提高肌蛋白合成速率。研究显示，每餐摄入约2–3克亮氨酸（约20–30克高质量蛋白）可最大化MPS反应。"""
    },
    {
        "question": """蛋白质摄入的最佳时机是什么？""",
        "answer": """最佳时机：  
1. 训练后30–60分钟（“蛋白质窗口期”）：此时肌肉对氨基酸的敏感度最高，摄入20–40克快吸收蛋白（如乳清蛋白）可快速提升血氨基酸浓度，促进MPS；  
2. 睡前：摄入20–40克缓吸收蛋白（如酪蛋白）可在夜间持续释放氨基酸，降低夜间肌蛋白分解（MPB）；  
3. 分餐摄入：将每日总蛋白量（1.6–2.2克/公斤体重）均分到3–5餐，每餐保证至少0.4–0.55克/公斤体重，有助于维持全天MPS水平。"""
    },
    {
        "question": """肌蛋白合成（MPS）和肌蛋白分解（MPB）的平衡如何影响肌肉生长？""",
        "answer": """肌肉净合成取决于MPS与MPB的差值：  
- 当MPS > MPB 时，肌肉处于正氮平衡，肌纤维合成超过分解，体积和力量增加；  
- 当MPS ≤ MPB 时，肌肉不会增长甚至流失。  
影响因素：  
1. 机械张力（训练强度、体积）  
2. 氨基酸及总热量摄入（热量盈余、优质蛋白）  
3. 激素环境（胰岛素、睾酮、生长激素）  
4. 恢复与睡眠（生长激素分泌、细胞修复）  
综合优化这些因素才能实现最佳增肌效果。"""
    },
    {
        "question": """如何通过饮食优化BCAA 的摄入？""",
        "answer": """天然食物来源：  
- 动物蛋白：牛肉、鸡胸肉、鱼、蛋、乳清、酪蛋白；  
- 植物蛋白：大豆、豌豆蛋白（含量略低，但可与谷物互补提高氨基酸评分）。  
补剂策略：  
- 训练前/中：5–10克BCAA，延缓疲劳、减少肌肉分解；  
- 训练后：可用含全量必需氨基酸（EAA）或乳清蛋白，确保除BCAA外其他氨基酸也充足；  
注意：长期单独高剂量BCAA补充会掩盖其他必需氨基酸，建议与完整蛋白或EAA合用。"""
    }
]



QA_DATA += [
    {
        "question": """什么是抗生素？它们如何发挥作用？""",
        "answer": """抗生素（Antibiotics）是一类用来对抗细菌感染的药物，主要通过以下几种机制抑制或杀灭细菌：  
1. 干扰细菌细胞壁合成（如青霉素、头孢菌素），导致细胞壁弱化、裂解；  
2. 抑制蛋白质合成（如四环素、氯霉素、氨基糖苷类），通过结合细菌核糖体阻断翻译；  
3. 抑制核酸合成（如喹诺酮类抑制DNA旋转酶、利福平抑制RNA聚合酶）；  
4. 干扰叶酸代谢（如磺胺类、甲氧苄啶），阻止核酸和蛋白质合成。  
注意：抗生素只对细菌有效，对病毒无效；滥用可导致耐药性产生。"""
    },
    {
        "question": """什么是抗病毒药物？它们的基本原理是什么？""",
        "answer": """抗病毒药物（Antivirals）针对病毒的复制周期设计，常见作用机制包括：  
1. 抑制病毒进入或与宿主细胞融合（如恩替卡韦用于乙型肝炎病毒）；  
2. 阻断病毒基因组复制（如阿昔洛韦抑制疱疹病毒DNA聚合酶、拉米夫定针对逆转录酶）；  
3. 干扰病毒蛋白加工或装配（如达芦那韦抑制HIV蛋白酶）；  
4. 调节宿主免疫反应（如干扰素增强抗病毒状态）。  
抗病毒药物需靶向病毒或宿主关键酶，具有较高选择性，以减少对机体细胞的毒性。"""
    },
    {
        "question": """先天免疫和获得性免疫有什么区别？""",
        "answer": """先天免疫（Innate Immunity）与获得性免疫（Adaptive Immunity）的主要区别：  
1. 反应速度：先天免疫快速（分钟–小时），获得性免疫较慢（天–周）；  
2. 特异性：先天免疫对病原体识别非特异，依赖模式识别受体（TLR等）；获得性免疫高度特异，通过T细胞受体和B细胞抗体识别特定抗原；  
3. 记忆性：先天免疫无免疫记忆，获得性免疫具有记忆，可在二次感染时快速应答；  
4. 主要成分：先天免疫包括物理屏障（皮肤、黏膜）、吞噬细胞（巨噬细胞、中性粒细胞）、NK细胞、补体；获得性免疫由T细胞（CD4⁺辅助、CD8⁺细胞毒）和B细胞（分泌抗体）主导。"""
    },
    {
        "question": """免疫系统中的关键细胞类型有哪些？""",
        "answer": """免疫系统主要由以下几类细胞构成：  
1. 中性粒细胞（Neutrophils）：先天免疫一线吞噬菌；  
2. 单核/巨噬细胞（Monocytes/Macrophages）：吞噬病原体并抗原呈递；  
3. 树突状细胞（Dendritic Cells）：高效抗原呈递细胞，激活T细胞；  
4. NK细胞（Natural Killer Cells）：针对感染或肿瘤细胞的天然细胞毒；  
5. T淋巴细胞（T Cells）：CD4⁺辅助T细胞协调免疫；CD8⁺细胞毒T细胞杀死被感染细胞；  
6. B淋巴细胞（B Cells）：分化为浆细胞，产生抗体中和病原体。  
这些细胞通过细胞因子和直接细胞接触共同完成免疫防御。"""
    },
    {
        "question": """什么是疫苗，它如何激发免疫保护？""",
        "answer": """疫苗（Vaccine）利用灭活或减毒病原体、病原体片段或基因序列（mRNA、病毒载体）模拟自然感染，激活获得性免疫：  
1. 抗原呈递：树突状细胞摄取疫苗成分并向淋巴结迁移；  
2. T细胞和B细胞活化：CD4⁺辅助T细胞分泌细胞因子，促进B细胞成熟为抗体分泌的浆细胞；CD8⁺细胞毒T细胞获得杀菌或杀病毒能力；  
3. 免疫记忆：形成记忆T、B细胞，二次接触病原体时能迅速增殖并产生大量中和抗体，实现持久保护。  
合理接种可显著降低感染率、重症率和病死率。"""
    }
]





corpus_questions = []
for item in QA_DATA:
    corpus_questions.append(item["question"])

# 加载多语种 MPNet 嵌入模型
MODEL = "sentence-transformers/paraphrase-multilingual-mpnet-base-v2"
embedder = SentenceTransformer(MODEL)

# 对语料做向量化并归一化
corpus_embeddings = embedder.encode(corpus_questions, convert_to_numpy=True, normalize_embeddings=True)
dim = corpus_embeddings.shape[1]

# 用 FAISS 建立 IndexFlatIP 索引（内积＝余弦相似度）
index = faiss.IndexFlatIP(dim)
index.add(corpus_embeddings)

@app.route('/search', methods=['POST'])
def search():
    data = request.get_json(force=True)
    q = data.get("q", "").strip()
    k = int(data.get("k", 1))

    if not q:
        return jsonify({"error": "字段 'q' 不能为空"}), 400
    if k < 1:
        return jsonify({"error": "字段 'k' 必须 >= 1"}), 400

    # 将查询向量化并归一化
    q_emb = embedder.encode([q], convert_to_numpy=True, normalize_embeddings=True)

    # 在 FAISS 索引中检索 top-k
    scores, idxs = index.search(q_emb, k)
    scores = scores.flatten()
    idxs = idxs.flatten()

    # 构造返回
    results = []
    for i in range(len(scores)):
        score = scores[i]
        idx = idxs[i]
        qa = QA_DATA[int(idx)]
        results.append({
            "question": qa["question"],
            "answer": qa["answer"],
            "score": round(float(score), 4)
        })

    return jsonify(results)

if __name__ == "__main__":
    app.run(port=5000, debug=True)
